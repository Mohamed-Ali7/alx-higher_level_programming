>>> add_integer = __import__("0-add_integer").add_integer

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(25.5, 5)
30

>>> add_integer(-15, -15)
-30

>>> add_integer(-15, -15)
-30

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer("1", 2)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, "2")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("1", "2")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer([1], 2)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(int("ten"), 10)
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: 'ten'

>>> add_integer(float('inf'), 2)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(3, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
